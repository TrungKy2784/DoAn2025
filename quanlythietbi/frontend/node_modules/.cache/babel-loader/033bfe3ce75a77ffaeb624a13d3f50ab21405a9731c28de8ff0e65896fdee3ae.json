{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\OneDrive\\\\Desktop\\\\DATN_QLyThietBi\\\\quanlythietbi\\\\frontend\\\\src\\\\context\\\\DeviceContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/DeviceContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { TaiSanService } from '../services/taiSanService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeviceContext = /*#__PURE__*/createContext();\nexport const DeviceProvider = ({\n  children\n}) => {\n  _s();\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchDevices = async () => {\n    try {\n      setLoading(true);\n      const response = await TaiSanService.getAll();\n      if (response.success) {\n        setDevices(response.data);\n      } else {\n        setError(response.message || 'Lỗi khi lấy dữ liệu thiết bị');\n      }\n    } catch (err) {\n      setError('Không thể kết nối đến server');\n      console.error('Error fetching devices:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchDevices();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DeviceContext.Provider, {\n    value: {\n      devices,\n      loading,\n      error,\n      fetchDevices\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(DeviceProvider, \"xsFNpb5ms7rokeRawzOU23dPYyI=\");\n_c = DeviceProvider;\nexport const useDevices = () => {\n  _s2();\n  const context = useContext(DeviceContext);\n  if (!context) {\n    throw new Error('useDevices must be used within a DeviceProvider');\n  }\n  return context;\n};\n_s2(useDevices, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DeviceProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","TaiSanService","jsxDEV","_jsxDEV","DeviceContext","DeviceProvider","children","_s","devices","setDevices","loading","setLoading","error","setError","fetchDevices","response","getAll","success","data","message","err","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useDevices","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/ADMIN/OneDrive/Desktop/DATN_QLyThietBi/quanlythietbi/frontend/src/context/DeviceContext.js"],"sourcesContent":["// src/context/DeviceContext.js\r\nimport React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport { TaiSanService } from '../services/taiSanService';\r\n\r\nconst DeviceContext = createContext();\r\n\r\nexport const DeviceProvider = ({ children }) => {\r\n    const [devices, setDevices] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const fetchDevices = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await TaiSanService.getAll();\r\n\r\n            if (response.success) {\r\n                setDevices(response.data);\r\n            } else {\r\n                setError(response.message || 'Lỗi khi lấy dữ liệu thiết bị');\r\n            }\r\n        } catch (err) {\r\n            setError('Không thể kết nối đến server');\r\n            console.error('Error fetching devices:', err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchDevices();\r\n    }, []);\r\n\r\n    return (\r\n        <DeviceContext.Provider value={{ devices, loading, error, fetchDevices }}>\r\n            {children}\r\n        </DeviceContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useDevices = () => {\r\n    const context = useContext(DeviceContext);\r\n    if (!context) {\r\n        throw new Error('useDevices must be used within a DeviceProvider');\r\n    }\r\n    return context;\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,aAAa,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,aAAa,gBAAGP,aAAa,CAAC,CAAC;AAErC,OAAO,MAAMQ,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMgB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACAH,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMI,QAAQ,GAAG,MAAMd,aAAa,CAACe,MAAM,CAAC,CAAC;MAE7C,IAAID,QAAQ,CAACE,OAAO,EAAE;QAClBR,UAAU,CAACM,QAAQ,CAACG,IAAI,CAAC;MAC7B,CAAC,MAAM;QACHL,QAAQ,CAACE,QAAQ,CAACI,OAAO,IAAI,8BAA8B,CAAC;MAChE;IACJ,CAAC,CAAC,OAAOC,GAAG,EAAE;MACVP,QAAQ,CAAC,8BAA8B,CAAC;MACxCQ,OAAO,CAACT,KAAK,CAAC,yBAAyB,EAAEQ,GAAG,CAAC;IACjD,CAAC,SAAS;MACNT,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZc,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA,CAACC,aAAa,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,OAAO;MAAEE,OAAO;MAAEE,KAAK;MAAEE;IAAa,CAAE;IAAAR,QAAA,EACpEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAACpB,EAAA,CAhCWF,cAAc;AAAAuB,EAAA,GAAdvB,cAAc;AAkC3B,OAAO,MAAMwB,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAGhC,UAAU,CAACK,aAAa,CAAC;EACzC,IAAI,CAAC2B,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;EACtE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,UAAU;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}